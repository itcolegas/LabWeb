{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.0"},"colab":{"name":"IBM Whatson.ipynb","provenance":[],"collapsed_sections":[]}},"cells":[{"cell_type":"code","metadata":{"id":"iTidnnX9fYB8","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1598927628770,"user_tz":300,"elapsed":372,"user":{"displayName":"Sabrina Lizette Santana Lazos","photoUrl":"","userId":"06802711838255699948"}}},"source":["import os\n","import json\n","import logging\n","import requests\n","\n","from jsonschema import validate, ValidationError\n","from ibm_watson import AssistantV2, ApiException\n","from ibm_cloud_sdk_core.authenticators import IAMAuthenticator\n","from flask import jsonify\n","from flask_api import status\n"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"Zb3ves83fYCQ","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1598929141788,"user_tz":300,"elapsed":348,"user":{"displayName":"Sabrina Lizette Santana Lazos","photoUrl":"","userId":"06802711838255699948"}}},"source":["request_data = {\n","            \"assistant_api_key\": \"zuP8C5Wz-Gzs07btP6cSmwK_FmORaC8LknZXhlsZLLK6\",\n","            \"assistant_url\": \"https://api.us-south.assistant.watson.cloud.ibm.com/instances/e57a0a40-cec6-4e0a-a7fa-913fd4bc3b93\",\n","            \"assistant_version\": \"2019-02-28\",\n","            \"assistant_id\": \"cf4c0ec1-8a6f-46b9-9590-449e24240c2b\",\n","            \"session_id\":        'e176a3ba-fa6a-47cc-a4a5-ef675d281408'\n","\n","        }\n","    \n","def watson_create_session():\n","\n","\n","    \n","    iam_apikey = request_data.get(\"assistant_api_key\")\n","    assistant_url = request_data.get(\"assistant_url\")\n","    assistant_version = request_data.get('assistant_version')\n","\n","    assistant = watson_instance(iam_apikey, assistant_url, assistant_version)\n","\n","    try:\n","        watson_session = assistant.create_session(\n","            assistant_id=request_data.get(\"assistant_id\")\n","        ).get_result()\n","        watson_session_id = watson_session[\"session_id\"]\n","    except KeyError:\n","        _logger.error(\"The session wasn't created\")\n","        return jsonify({\"error\": \"Error creating the session\"}), status.HTTP_503_SERVICE_UNAVAILABLE\n","\n","    return watson_session_id\n","\n","\n","def watson_response(session_id, message):\n","    \n","    iam_apikey = request_data.get(\"assistant_api_key\")\n","    assistant_url = request_data.get(\"assistant_url\")\n","    assistant_version = request_data.get('assistant_version')\n","\n","    assistant = watson_instance(iam_apikey, assistant_url, assistant_version)\n","    context = request_data.get('context') if 'context' in request_data else {}\n","    watson_session_id = session_id\n","\n","    try:\n","        watson_response = assistant.message(\n","            assistant_id=request_data.get('assistant_id'),\n","            session_id=watson_session_id,\n","            input={\n","                'message_type': 'text',\n","                'text': message,\n","                'options': {\n","                    'return_context': True\n","                }\n","            },\n","            context=context\n","        ).get_result()\n","    except ValueError as ex:\n","        _logger.error(\"Value error: %s\", ex)\n","        return jsonify({'error': \"Value error\"}), status.HTTP_500_INTERNAL_SERVER_ERROR\n","    except ApiException:\n","        try:\n","            watson_session = assistant.create_session(\n","                assistant_id=request_data.get(\"assistant_id\")\n","            ).get_result()\n","            watson_session_id = watson_session[\"session_id\"]\n","\n","            watson_response = assistant.message(\n","                assistant_id=request_data.get('assistant_id'),\n","                session_id=watson_session_id,\n","                input={\n","                    'message_type': 'text', #Aqui va el componente de react\n","                    'text': request_data.get('input_message'),\n","                    'options': {\n","                        'return_context': True\n","                    }\n","                },\n","                context=context\n","            ).get_result()\n","        except KeyError:\n","            _logger.error(\"The session wasn't created\")\n","            return jsonify({\"error\": \"Error creating the session\"}), status.HTTP_503_SERVICE_UNAVAILABLE\n","\n","    try:\n","        del watson_response[\"context\"][\"global\"][\"session_id\"]\n","    except:\n","        pass\n","\n","    response = {\n","        \"response\": watson_response,\n","        \"session_id\": watson_session_id\n","    }\n","\n","    return response[\"response\"][\"output\"][\"generic\"][0][\"text\"]  #puedes hacerlo con puntoget\n","\n","def watson_instance(iam_apikey: str, url: str, version: str = \"2019-02-28\") -> AssistantV2:\n","    try:\n","        authenticator = IAMAuthenticator(iam_apikey)\n","        assistant = AssistantV2(\n","            authenticator=authenticator,\n","            version=version\n","        )\n","        assistant.set_service_url(url)\n","    except ApiException as error:\n","        _logger.error(\"%s - %s\", error.code, error.message)\n","        return jsonify({'error': str(error.message)}), error.code\n","\n","    return assistant\n"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"id":"LQSlWbO2fYC0","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1598929144560,"user_tz":300,"elapsed":2177,"user":{"displayName":"Sabrina Lizette Santana Lazos","photoUrl":"","userId":"06802711838255699948"}},"outputId":"5dd7cf82-bdfe-4946-d2b0-407a9d85c698"},"source":["print(watson_response(watson_create_session(),\"hi\"))"],"execution_count":32,"outputs":[{"output_type":"stream","text":["<p> Hi, how are you? </p>\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"DjiNv3IlfYDB","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XHTCUcWDfYDH","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VJ6F_mHHfYDO","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}